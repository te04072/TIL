number_of_people = 0
number_of_book = 100

name = ['김시습', '허균', '남영로', '임제', '박지원']
age = [20, 16, 52, 36, 60]
address = ['서울', '강릉', '조선', '나주', '한성부']


def create_user(user_name, user_age, user_address):
    print(f"{user_name}님 환영합니다!")
    user_info = {'name': user_name, 'age': user_age, 'address': user_address}
    return user_info


many_user = list(map(create_user, name, age, address))       # map 함수를 통해 create_user 함수를 각각의 리스트에 대해 수행, 5개의 dict로 이루어진 list를 얻는다.

def decrease_book(rented_book):
    global number_of_book
    number_of_book -= rented_book
    print(f"남은 책의 수 : {number_of_book}")


def rental_book(info):
    rented_book = info['age'] // 10
    decrease_book(rented_book)
    print(f"{info['name']}님이 {rented_book}권의 책을 대여하였습니다.")


info_list = list(map(lambda item: {'name': item['name'], 'age': item['age']}, many_user))    # many_user의 'name'과 'age'만을 사용한 새로운 dict로 이루어진 리스트를 출력
list(map(rental_book, info_list))                            # map 함수는 iterator이며 이는 **lazy evaluation**이기 때문에 list()를 써야 출력이 나온다. 
